{
    "count": 206,
    "next": "https://www.udemy.com/api-2.0/users/me/subscribed-courses/?fields%5Bcourse%5D=completion_ratio%2Cenrollment_time%2Clast_accessed_time%2Cnum_collections%2Cpublished_title%2Ctitle%2Ctracking_id%2Curl%2Cdescription%2Cvisible_instructors&fields%5Buser%5D=%40min%2Cjob_title&is_archived=false&ordering=-last_accessed&page=11&page_size=12",
    "previous": "https://www.udemy.com/api-2.0/users/me/subscribed-courses/?fields%5Bcourse%5D=completion_ratio%2Cenrollment_time%2Clast_accessed_time%2Cnum_collections%2Cpublished_title%2Ctitle%2Ctracking_id%2Curl%2Cdescription%2Cvisible_instructors&fields%5Buser%5D=%40min%2Cjob_title&is_archived=false&ordering=-last_accessed&page=9&page_size=12",
    "results": [
      {
        "_class": "course",
        "id": 1954018,
        "title": "Advanced REST APIs with Flask and Python",
        "url": "/course/advanced-rest-apis-flask-python/learn/",
        "visible_instructors": [
          {
            "_class": "user",
            "id": 766460,
            "title": "Jose Salvatierra",
            "name": "Jose",
            "display_name": "Jose Salvatierra",
            "job_title": "Founder of Teclado and Software Engineer"
          },
          {
            "_class": "user",
            "id": 56052134,
            "title": "Teclado by Jose Salvatierra",
            "name": "Teclado",
            "display_name": "Teclado by Jose Salvatierra",
            "job_title": "Software Development For Everyone"
          }
        ],
        "published_title": "advanced-rest-apis-flask-python",
        "tracking_id": "15IkHId_Tl2kziGzNb9EgA",
        "description": "<p><strong>Welcome to our Advanced REST&nbsp;APIs with Flask and Python Course!</strong></p><p>We created the most popular introductory REST API development course on Udemy, with over 15,000 reviews and 80,000 students. Now we want to help you get even farther with your Flask REST APIs, with new features and functionality.</p><p>Our first course took you from zero to a deployed REST API that users could access. In this one we will cover <strong>new and advanced features</strong> that take your REST APIs with the next level!</p><p><br></p><p><strong>Topics covered</strong></p><ul><li><p>Simplify <strong>data serialization and deserialization</strong> in REST APIs using marshmallow</p></li><li><p>Handle <strong>user account confirmations</strong> by <strong>sending e-mails</strong> with Python</p></li><li><p><strong>Image uploads</strong> using Flask-Upload</p></li><li><p>Simplify making changes to your database structure with <strong>database migrations</strong> using alembic</p></li><li><p>Write <strong>documentation</strong> and <strong>test</strong> your REST API using Postman</p></li><li><p>Handle <strong>payments</strong> and process orders using Stripe</p></li><li><p><strong>Social login using OAuth</strong>. You can use this log in with Twitter, Facebook, GitHub, or any other third party.</p></li><li><p>Use the latest technologies and the best practices. Everything you'll learn works with <strong>Python 3.10</strong>, the latest version.</p></li></ul><p><br></p><p><strong>Course structure</strong></p><p>This course builds upon another: \"REST APIs with Flask and Python\". If you don't have <em>any</em> Flask experience we recommend taking that course first.</p><p>We <em>won't</em> teach you the very <em>basics of REST API development</em> <em>or</em> <em>Python</em> in this course. We'll give you a finished project and extend it every section. We explain everything about the starter project very carefully, and we've even written an e-book about it!</p><p>We introduce new features and technologies by adding them to the starter application so you can see how we build professional REST APIs. As we add features, we'll also test them.</p><p>That will also help you understand more about how to add features to your REST API incrementally. This makes development faster and minimises risk.</p><p><br></p><p><strong>Extra resources</strong></p><p>Many lectures contain extra resources, such as links to external documentation and projects, for you to learn more. And for each lecture, we include the source code at the start and at the end so you can follow along and never get lost. All the source code is on GitHub for your convenience.</p><p>We're always available to help in the Udemy Course Q&amp;A and also our own student community Discord server.</p><p><br></p><p><strong>Advanced REST APIs with Flask and Python</strong></p><p>Remember, this is our most advanced course yet! You should have enough programming experience with Python or another programming language. You should have knowledge of how to install Python packages and how to run your Python applications. Some knowledge of how the web works is also really helpful.</p><p>Thank you for considering this course. I'll see you on the inside!</p>",
        "completion_ratio": 0,
        "last_accessed_time": "2022-03-11T05:56:30Z",
        "enrollment_time": "2020-07-29T06:50:43Z",
        "num_collections": 1
      },
      {
        "_class": "course",
        "id": 4342904,
        "title": "Java Programming - a solid foundation for new developers",
        "url": "/course/java-fundamentals-a-solid-foundation-for-new-programmers/learn/",
        "visible_instructors": [
          {
            "_class": "user",
            "id": 9244826,
            "title": "Matt Greencroft",
            "name": "Matt",
            "display_name": "Matt Greencroft",
            "job_title": "Course tutor at Virtual Pair Programmers"
          },
          {
            "_class": "user",
            "id": 49202064,
            "title": "Virtual Pair Programmers",
            "name": "Virtual Pair",
            "display_name": "Virtual Pair Programmers",
            "job_title": ""
          }
        ],
        "published_title": "java-fundamentals-a-solid-foundation-for-new-programmers",
        "tracking_id": "vuwb3Q2jTvyENZx5dE77xw",
        "description": "<p>This course covers <strong>Java 8, Java 11 and Java 17 </strong>(and if you are new to Java, we explain why there are so many current versions, and how to decide which you should be using!). When there are differences between Java versions, we explain what the differences are, so you'll learn the best way to start Java programming whichever version you are using.</p><p>This course will help you learn the elements of programming in core Java, with a very practical, hands-on approach. We cover everything from the basics of programming, through to advanced features such as Object Orientation, Lambda expressions, collections and streams, using databases, working with files, testing and more. Throughout the course you will be working on some Java projects, using realistic examples, not abstract ideas. </p><p>This course is a great entry point for any new full-stack developer - in fact it's based on part of a 6 week full-stack JVM&nbsp;developer bootcamp that I&nbsp;have delivered to a number of companies over the last couple of years. It's a great way to get into programming, and set yourself up to be ready to learn popular Java frameworks such as Spring, Hibernate, Jakarta, Hadoop, Apache Spark, Akka, or even building Android Apps.</p><p>To be a confident, competent Java programmer, you need a good foundation and this course will give you that – it covers every topic in a thorough way, but at a level that makes it easy to follow and accessible. </p><p>The syllabus has been specially designed to cover what good developers need to know, and helps you build up your knowledge through lots of practical exercises. You’ll work on a case study that will by the end of the course be a fully functioning application.</p><p>The course is based on a 5 day live training programme which is taught to newly hired developers in various companies, although it includes even more topics. It is suitable for anyone who has no programming experience, has programmed in other languages and wants to transition to Java, or has limited basic programming experience (maybe self-taught) in Java and wants to get a more solid and professional foundation.</p><p>If you are serious about getting a career as a full stack Java developer, then let me help you get started and set you on the path to success.</p>",
        "completion_ratio": 0,
        "last_accessed_time": "2022-03-11T05:55:47Z",
        "enrollment_time": "2021-12-03T18:18:57Z",
        "num_collections": 1
      },
      {
        "_class": "course",
        "id": 1352468,
        "title": "Master Microservices with Spring Boot and Spring Cloud",
        "url": "/course/microservices-with-spring-boot-and-spring-cloud/learn/",
        "visible_instructors": [
          {
            "_class": "user",
            "id": 13363166,
            "title": "in28Minutes Official",
            "name": "in28Minutes",
            "display_name": "in28Minutes Official",
            "job_title": "DevOps, Azure, GCP, Docker, Kubernetes, Java & Spring Boot"
          }
        ],
        "published_title": "microservices-with-spring-boot-and-spring-cloud",
        "tracking_id": "ncUvd-bYRvO_2xTIzL7B9A",
        "description": "<p>Do you want to learn from the <strong><em>MOST&nbsp;POPULAR</em></strong>&nbsp;Course <strong><em>(180K+&nbsp;Students)</em></strong>&nbsp; on <strong>Microservices</strong>? Do you want to <strong>Learn to Build an Amazing REST&nbsp;API </strong>with <strong>Spring Boot</strong>?&nbsp;Do you want to learn what the <strong>Hype about Microservices</strong> is all about?&nbsp;Do you want to <strong>Build Microservices with Spring Boot and Spring Cloud</strong>? Do you want to <strong>Build Containers with Docker</strong>?&nbsp;Do you want to <strong>orchestrate Microservices with Kubernetes</strong>? <em>Look no further!</em></p><p><br></p><p><strong>UPDATES</strong>:&nbsp;New&nbsp;Sections on <strong>SPRING&nbsp;BOOT</strong>, <strong>DOCKER</strong> and <strong>KUBERNETES</strong>.</p><p><br></p><p><strong>WHAT&nbsp;OUR&nbsp;LEARNERS&nbsp;ARE&nbsp;SAYING:</strong></p><p><strong>5 STARS&nbsp;- </strong>Anyone willing to learn <strong>Spring Cloud APIs</strong> and <strong>Spring Rest</strong> must <strong>enroll for the course without second-thoughts</strong>.</p><p><strong>5 STARS&nbsp;- </strong>Probably I can say this is <strong>best tutorial for Spring boot as well as Micro Service</strong> for the <strong>learners</strong> who have <strong>just started</strong> there work/projects on these technologies.</p><p><strong>5 STARS&nbsp;- </strong>This was an <strong>excellent course</strong>! The instructor provided great <strong>examples that were straight-forward</strong> and <strong>easy to understand</strong>….. I would <strong>highly recommend his courses</strong> if you want to <strong>solid introduction to spring boot</strong> and the spring framework.</p><p><strong>5 STARS&nbsp;- Very helpful for the beginners</strong> as well as experienced people to gain knowledge on Restful Web-services and Spring boot. Thank you for such a nice tutorial.</p><p><strong>5 STARS&nbsp;- </strong>This was <strong>perfect course</strong> to get <strong>introduced</strong> to the <strong>world of microservices</strong>. Instructor explained each topic by first listing the problems that the particular solution is going to solve.</p><p><strong>5 STARS&nbsp;- Great course</strong>, the teacher explains everything in a good way making <strong>good example</strong>s that makes easy to understand how this knowledge can be use in real project. <strong>All the courses of in28minutes are great</strong>, i'm waiting for the next great course.</p><p><strong>5 STARS&nbsp;- </strong>The instructor's has a <strong>unique style of teaching</strong> which is very <strong>uncomplicated</strong> , <strong>up-to-the point</strong> and <strong>very effective</strong>. Great job!</p><p><strong>5 STARS&nbsp;- </strong>This one is the <strong>most awesome course</strong> that I have ever purchased in udemy!</p><p><br></p><p><strong>COURSE&nbsp;OVERVIEW:</strong></p><p>Developing <strong>RESTful web services and REST&nbsp;API</strong> is fun. The combination of Java, Spring Boot, Spring Web MVC, Spring Web Services and JPA makes it even more fun. And its even more fun to create Microservices.</p><p>There are <strong>two parts</strong> to this course - RESTful web services and Microservices</p><p>Architectures are moving towards microservices.&nbsp;RESTful web services are the <strong>first step</strong> to developing great microservices. Java and Spring Boot, in combination with Spring Web MVC (also called Spring REST) makes it easy to develop RESTful web services.</p><p><strong>In the first part of the course</strong>, you will <strong>learn the basics of RESTful web services</strong> developing resources for a social media application. You will learn to implement these resources with multiple features - <strong>versioning</strong>, exception handling, <strong>documentation</strong> (Swagger), basic authentication (Spring Security), <strong>filtering</strong> and HATEOAS. You will learn the <strong>best practices</strong> in <strong>designing RESTful web services</strong>.</p><p>In this part of the course, you will be using Spring (Dependency Management), Spring MVC (or Spring REST), Spring Boot, Spring Security (Authentication and Authorization), Spring Boot Actuator (Monitoring), Swagger (Documentation), Maven (dependencies management), Eclipse (IDE), Postman (REST Services Client) and Tomcat Embedded Web Server. We will help you set up each one of these.</p><p><strong>In the second part of the course</strong>, you will learn the <strong>basics of Microservices</strong>. You will understand how to implement microservices using Spring Cloud.</p><p>In this part of the course, you will learn to establish communication between microservices, enable load balancing, scaling up and down of microservices. You will also learn to centralize the configuration of microservices with Spring Cloud Config Server. You will implement Eureka Naming Server and Distributed tracing with Spring Cloud Sleuth and Zipkin. You will create fault tolerant microservices with Zipkin.</p><p><strong>In the third part of the course</strong>, you will learn the <strong>basics of Docker</strong>. You will understand how to build containers for microservices built using Docker and Spring Cloud.</p><p><strong>In the fourth part of the course</strong>, you will learn the <strong>basics of Kubernetes</strong>. You will understand how to orchestrate microservices with Kubernetes.</p><p><strong>WHAT&nbsp;TO&nbsp;EXPECT&nbsp;FROM&nbsp;EVERY&nbsp;IN28MINUTES&nbsp;COURSE</strong></p><p>in28Minutes offers 30 Best Selling Courses providing Amazing Learning Experiences to 500,000 Learners across the world.</p><p>Each of these courses come with </p><ul><li><p>Amazing Hands-on Step By Step Learning Experiences </p></li><li><p>Real Project Experiences using the Best Tools and Frameworks </p></li><li><p>Awesome Troubleshooting Guides with 200+ FAQs Answered </p></li><li><p>Friendly Support in the Q&amp;A section </p></li><li><p>Free Udemy Certificate of Completion on Completion of Course</p></li></ul><p><br></p><p><strong>HERE&nbsp;ARE&nbsp;A&nbsp;FEW&nbsp;REVIEWS&nbsp;ON&nbsp;THE&nbsp;IN28MINUTES&nbsp;WAY</strong></p><p><strong>5 STARS -</strong> Excellent, fabulous. The way he has prepared the material and the way he teaches is really awesome. What an effort .. Thanks a million </p><p><strong>5 STARS -</strong> A lot of preparation work has taken place from the teacher and this is visible throughout the course. </p><p><strong>5 STARS -</strong> This guy is fantastic. Really. Wonderful teaching skills, and goes well out of his way to make sure that everything he is doing is fully understood. This is the kind of tutorial that gets me excited to work with a framework that I may otherwise not be. </p><p><strong>5 STARS -</strong> The best part of it is the hands-on approach which the author maintained throughout the course as he had promised at the beginning of the lecture. He explains the concepts really well and also makes sure that there is not a single line of code you type without understanding what it really does. </p><p><strong>5 STARS -</strong> I also appreciate the mind and hands approach of teaching something and then having the student apply it. It makes everything a lot clearer for the student and uncovers issues that we will face in our project early. </p><p><strong>5 STARS -</strong> Amazing course. Explained super difficult concepts (that I have spent hours on the internet finding a good explanation) in under 5 minutes.</p><p><strong>Start Learning Now.</strong> Hit the Enroll Button!</p><p><br></p><p><strong>STEP&nbsp;BY&nbsp;STEP&nbsp;DETAILS</strong></p><p><strong><em>RESTful Web Services&nbsp;</em></strong></p><ul><li><p>Step 01 - Initializing a RESTful Services Project with Spring Boot</p></li><li><p>Step 02 - Understanding the RESTful Services we would create in this course</p></li><li><p>Step 03 - Creating a Hello World Service</p></li><li><p>Step 04 - Enhancing the Hello World Service to return a Bean</p></li><li><p>Step 05 - Quick Review of Spring Boot Auto Configuration and Dispatcher Servlet - What's happening in the background?</p></li><li><p>Step 06 - Enhancing the Hello World Service with a Path Variable</p></li><li><p>Step 07 - Creating User Bean and User Service</p></li><li><p>Step 08 - Implementing GET Methods for User Resource</p></li><li><p>Step 09 - Implementing POST Method to create User Resource</p></li><li><p>Step 10 - Enhancing POST Method to return correct HTTP Status Code and Location URI</p></li><li><p>Step 11 - Implementing Exception Handling - 404 Resource Not Found</p></li><li><p>Step 12 - Implementing Generic Exception Handling for all Resources</p></li><li><p>Step 13 - Exercise : User Post Resource and Exception Handling</p></li><li><p>Step 14 - Implementing DELETE Method to delete a User Resource</p></li><li><p>Step 15 - Implementing Validations for RESTful Services</p></li><li><p>Step 16 - Implementing HATEOAS for RESTful Services</p></li><li><p>Step 17 - Overview of Advanced RESTful Service Features</p></li><li><p>Step 18 - Internationalization for RESTful Services</p></li><li><p>Step 19 - Content Negotiation - Implementing Support for XML</p></li><li><p>Step 20 - Configuring Auto Generation of Swagger Documentation</p></li><li><p>Step 21 - Introduction to Swagger Documentation Format</p></li><li><p>Step 22 - Enhancing Swagger Documentation with Custom Annotations</p></li><li><p>Step 23 - Monitoring APIs with Spring Boot Actuator</p></li><li><p>Step 24 - Implementing Static Filtering for RESTful Service</p></li><li><p>Step 25 - Implementing Dynamic Filtering for RESTful Service</p></li><li><p>Step 26 - Versioning RESTful Services - Basic Approach with URIs</p></li><li><p>Step 27 - Versioning RESTful Services - Header and Content Negotiation Approaches</p></li><li><p>Step 28 - Implementing Basic Authentication with Spring Security</p></li><li><p>Step 29 - Overview of Connecting RESTful Service to JPA</p></li><li><p>Step 30 - Creating User Entity and some test data</p></li><li><p>Step 31 - Updating GET methods on User Resource to use JPA</p></li><li><p>Step 32 - Updating POST and DELETE methods on User Resource to use JPA</p></li><li><p>Step 33 - Creating Post Entity and Many to One Relationship with User Entity</p></li><li><p>Step 34 - Implementing a GET service to retrieve all Posts of a User</p></li><li><p>Step 35 - Implementing a POST service to create a Post for a User</p></li><li><p>Step 36 - Richardson Maturity Model</p></li><li><p>Step 37 - RESTful Services Best Practices</p></li></ul><p><strong><em>Microservices with Spring Cloud</em></strong></p><ul><li><p>Step 01 - Part 1 - Introduction to Limits Microservice and Spring Cloud Config Server</p></li><li><p>Step 01 - Part 2 - Setting up Limits Microservice</p></li><li><p>Step 02 - Creating a hard coded limits service</p></li><li><p>Step 03 - Enhance limits service to pick up configuration from application properties</p></li><li><p>Step 04 - Setting up Spring Cloud Config Server</p></li><li><p>Step 05 - Installing Git</p></li><li><p>Step 06 - Creating Local Git Repository</p></li><li><p>Step 07 - Connect Spring Cloud Config Server to Local Git Repository</p></li><li><p>Step 08 - Configuration for Multiple Environments in Git Repository</p></li><li><p>Step 09 - Connect Limits Service to Spring Cloud Config Server</p></li><li><p>Step 10 - Configuring Profiles for Limits Service</p></li><li><p>Step 11 - A review of Spring Cloud Config Server</p></li><li><p>Step 12 - Introduction to Currency Conversion and Currency Exchange Microservices</p></li><li><p>Step 13 - Setting up Currency Exchange Microservice</p></li><li><p>Step 14 - Create a simple hard coded currency exchange service</p></li><li><p>Step 15 - Setting up Dynamic Port in the the Response</p></li><li><p>Step 16 - Configure JPA and Initialized Data</p></li><li><p>Step 17 - Create a JPA Repository</p></li><li><p>Step 18 - Setting up Currency Conversion Microservice</p></li><li><p>Step 19 - Creating a service for currency conversion</p></li><li><p>Step 20 - Invoking Currency Exchange Microservice from Currency Conversion Microservice</p></li><li><p>Step 21 - Using Feign REST Client for Service Invocation</p></li><li><p>Step 22 - Setting up client side load balancing with Ribbon</p></li><li><p>Step 23 - Running client side load balancing with Ribbon</p></li><li><p>Step 24 - Understand the need for a Naming Server</p></li><li><p>Step 25 - Setting up Eureka Naming Server</p></li><li><p>Step 26 - Connecting Currency Conversion Microservice to Eureka</p></li><li><p>Step 27 - Connecting Currency Exchange Microservice to Eureka</p></li><li><p>Step 28 - Distributing calls using Eureka and Ribbon</p></li><li><p>Step 29 - A review of implementing Eureka, Ribbon and Feign</p></li><li><p>Step 30 - Introduction to API Gateways</p></li><li><p>Step 31 - Setting up Zuul API Gateway</p></li><li><p>Step 32 - Implementing Zuul Logging Filter</p></li><li><p>Step 33 - Executing a request through Zuul API Gateway</p></li><li><p>Step 34 - Setting up Zuul API Gateway between microservice invocations</p></li><li><p>Step 35 - Introduction to Distributed Tracing</p></li><li><p>Step 36 - Implementing Spring Cloud Sleuth</p></li><li><p>Step 37 - Introduction to Distributed Tracing with Zipkin</p></li><li><p>Step 38 - Installing Rabbit MQ</p></li><li><p>Step 39 - Setting up Distributed Tracing with Zipkin</p></li><li><p>Step 40 - Connecting microservices to Zipkin</p></li><li><p>Step 41 - Using Zipkin UI Dashboard to trace requests</p></li><li><p>Step 42 - Understanding the need for Spring Cloud Bus</p></li><li><p>Step 43 - Implementing Spring Cloud Bus</p></li><li><p>Step 44 - Fault Tolerance with Hystrix</p></li></ul><p><strong>Start Learning Now.</strong> Hit the Enroll Button!</p>",
        "completion_ratio": 4,
        "last_accessed_time": "2022-03-11T05:54:29Z",
        "enrollment_time": "2021-06-22T18:54:10Z",
        "num_collections": 1
      },
      {
        "_class": "course",
        "id": 1656228,
        "title": "Java Multithreading, Concurrency & Performance Optimization",
        "url": "/course/java-multithreading-concurrency-performance-optimization/learn/",
        "visible_instructors": [
          {
            "_class": "user",
            "id": 44831418,
            "title": "Michael Pogrebinsky | Software Architecture & Java Programming Expert",
            "name": "Michael",
            "display_name": "Michael Pogrebinsky | Software Architecture & Java Programming Expert",
            "job_title": "Professional Software Engineer | SW Architect | Instructor"
          }
        ],
        "published_title": "java-multithreading-concurrency-performance-optimization",
        "tracking_id": "AeXsmXD3Sgawj3Afp-jwlw",
        "description": "<p><strong>Description</strong></p><p>If you had your own jet plane, would you drive it to the grocery store, or fly it on a tour around the world?</p><p>Today every computer and phone comes with immense computing power and multiple cores that allow for full parallelism. In this course, you will go on a journey to learn all the fundamental tools you need to become a confident and successful multithreaded application developer. Using <strong>multithreading</strong> and <strong>concurrency</strong> we will learn to get the most out of our computer to truly make it fly!</p><p><strong>Teaching Philosophy</strong></p><p>The course is designed to teach you \"how to fish\". Instead of memorizing classes, libraries, or Java APIs, we will learn the fundamentals of multithreaded programming, starting from the complete basics, all the way to the very advanced topics in multithreading.</p><p>All lectures include the right theory and are accompanied by practical examples from relevant fields such as:</p><ul><li><p>User Interface applications</p></li><li><p>Image Processing</p></li><li><p>Web Applications</p></li><li><p>Computational programs</p></li><li><p>And others</p></li></ul><p>It's a practical course that is meant to<strong> save you time. </strong>Instead of filling hours of material, I hand-picked the most important topics based on my practical experience.</p><p><strong>Target Student for this Course</strong></p><ul><li><p>Students who already have some experience and basic knowledge in programming in Java.</p></li><li><p>Students who want to acquire multithreaded, parallel programming and concurrency skills, in a short period of time.</p></li><li><p>Students who are interested in performance optimizations and getting a good foundation in the above-mentioned topics.</p></li><li><p>Students who want to take their careers to the next level. Whether you are a</p><ul><li><p>Newly graduate and you're looking to land a dream job.</p></li><li><p>A professional engineer who wants to become a better programmer and improve your skillset.</p></li></ul></li><li><p>A freelancer who wants to develop his/her own project and is looking to learn how to write efficient multithreaded code.</p><p><br></p><p>Then this course is for YOU!</p></li></ul><p><strong>Short Bio</strong></p><p>My passion for multithreading and concurrency started in college where I worked on a highly scalable, distributed, B+ Tree research project, sponsored by IBM.</p><p>Later I worked as a Computer Architecture Engineer at Intel Corporation and as a Software Engineer in other companies where I developed many applications and features involving efficient and optimized multithreaded code to deliver real-time video, audio, and data - in education, healthcare, augmented reality, and Ad Tech.</p><p>Today I am a Principal Software Engineer and Software Architect. Training and mentoring engineers on all levels is both my job and my passion.</p><p><strong>We will learn</strong></p><ul><li><p>Operating Systems fundamentals and motivation for multithreading and concurrency.</p></li><li><p>The basics of multithreading - how to create threads in Java as well as communicate between threads in Java.</p></li><li><p>Performance considerations and design patterns of multithreaded and parallel applications. Optimizing for latency or throughput.</p></li><li><p>Data sharing between threads in Java. All the pitfalls and challenges as well as the solutions and best practices.</p></li><li><p>Advanced lock-free algorithms and data structures for increased responsiveness and performance.</p></li></ul><p><strong>By the End of the Course</strong></p><p>You will be able to</p><ul><li><p>Write correct, responsive, and performant multithreaded applications in Java, for any purpose and scale.</p></li><li><p>Apply best practices to architect multithreaded applications, algorithms, and libraries.</p></li><li><p>Become knowledgeable in concurrency &amp; parallel programming, which will help you in job interviews, in your daily work as an engineer, as well as in your personal projects.</p></li></ul><p>Become an expert in Java Multithreading, Concurrency, and Performance Optimization today!</p><p><br></p><p><strong>FAQs</strong></p><p><em>- \"Will the course help me with interview questions?\"</em></p><p>Yes! The course is focused on helping you become proficient in multithreading and concurrency in general, and also master multithreading in Java in particular. You will learn all you need about threads in Java as well as common topics in interview questions involving locking, synchronization in Java, heap, and stack memory organization, and so on. Although the course is not focused on interview questions specifically, and there's no way to predict what you will be asked during an interview question, the knowledge you will get will definitely set you apart from other candidates.</p><p><br></p><p>- <em>\"Does the course cover all threading classes and APIs in Java?\"</em></p><p>\"No. There are many books and expensive academic courses which cover EVERY single class and API which would take months to finish. In addition, Oracle provides excellent Java Docs that cover and explain every single Java multithreading API and class.</p><p>This course is different!</p><p>Based on years of experience in the field, I have carefully designed a short curriculum that teaches you all the essentials in a short amount of time.</p><p>No fillers! No more wasting time learning things you could read yourself in 5 minutes or don't ever need!</p><p>This course will build the foundation for you to become an expert in multithreading and concurrency. And also be able to successfully and easily, extend your own knowledge in the future.</p><p><br></p><p>- <em>\"What if I don't understand something during the course and I have a question, what do I do?\"</em></p><p>Not a problem! I am here to help you succeed! Multithreading is not an easy topic and no one is expected to get it all right away. Each lecture has a Q&amp;A section where students can ask questions about the lecture or any follow-up questions about the topic in general. I (the instructor) will answer all the questions in a timely manner and make sure you have all the tools for success.</p><p><br></p><p>- <em>\"Does the course cover interprocess communication and distributed Systems?\"</em></p><p>No. Although those are really interesting and important topics that involve concurrency. They are not directly related to Java multithreading, which is the main topic of the course. We do mention those topics during the course but they are out of scope and deserve their own course. The concepts, use-cases, and challenges are very different than the ones we encounter while optimizing the performance of a single multithreaded Java application, algorithm, or library, so we will not cover them here.</p><p><br></p><p><em>- \"Why do I need a separate course for concurrent programming?\"</em></p><p>Concurrent programming is fundamentally different than transitional sequential programming. As in every engineering decision, there's always a tradeoff. Parallel and Concurrent programming can have a tremendous positive impact on the application's performance and responsiveness but is a lot harder to get it right. In this course, we will learn all the caveats, techniques, and best practices to get the most out of multithreaded applications in Java.</p>",
        "completion_ratio": 0,
        "last_accessed_time": "2022-03-11T05:53:43Z",
        "enrollment_time": "2021-12-03T11:54:11Z",
        "num_collections": 0
      },
      {
        "_class": "course",
        "id": 950152,
        "title": "Learn Java Unit Testing with Junit & Mockito in 30 Steps",
        "url": "/course/mockito-tutorial-with-junit-examples/learn/",
        "visible_instructors": [
          {
            "_class": "user",
            "id": 13363166,
            "title": "in28Minutes Official",
            "name": "in28Minutes",
            "display_name": "in28Minutes Official",
            "job_title": "DevOps, Azure, GCP, Docker, Kubernetes, Java & Spring Boot"
          }
        ],
        "published_title": "mockito-tutorial-with-junit-examples",
        "tracking_id": "So-k1s38RwiiSLXe2-pccQ",
        "description": "<p>Writing <strong>Great Unit Tests </strong>distinguishes Good Programmers from <strong>Great Programmers</strong>. </p><p>In this course, you will learn how to <strong>Write Great Java Unit Tests</strong> with Mockito and JUnit. </p><p><br></p><p><strong>WHAT&nbsp;OUR&nbsp;LEARNERS&nbsp;ARE&nbsp;SAYING:</strong></p><p><strong>5 STARS&nbsp;- </strong>When I’ve started this course I had very basic knowledge of JUnit and Mockito and now everything is clearer. <strong>It is a very good course for beginners.</strong> Everything was very well explained.&nbsp;</p><p><strong>5 STARS&nbsp;- </strong>As always, Ranga offers an <strong>excellent way of teaching</strong>: <strong>coding from scratch</strong>, good explanation, useful <strong>examples for the real world job</strong>. He is <strong>not only an experienced programmer</strong>, but also a <strong>great teacher</strong>. I learned more than I expected. Thanks</p><p><strong>5 STARS&nbsp;- </strong>It was my long time wish to learn Mockito and this instructor nailed it. <strong>Best 5hrs I spent ever.</strong> He is really good in what he is doing.&nbsp;</p><p><strong>5 STARS&nbsp;- </strong>This course is a great tutorial to unit testing and standard practices of mocking. <strong>I would recommend it to even experienced developers</strong> who would be surprised to find some new ideas in here. Explanations are precise and detailed. Well done.</p><p><strong>5 STARS&nbsp;- </strong>Very interesting course with good examples. Every topic was easy to understand because of author's <strong>awesome explanation</strong>. I rate this course as 5/5.</p><p><strong>5 STARS&nbsp;- </strong>Very good course. The approach is very systematic and step by step. I really like the <strong>combination of theory and practical</strong> goes hand by hand. The <strong>journey from JUnit to Mockito to Powermock</strong> is very well described.</p><p><br></p><p><br></p><p><strong>COURSE&nbsp;HIGHLIGHTS</strong></p><p>You take 12 steps with JUnit and 18 steps with Mockito into unit testing proficiency.</p><p><strong>Mocking with Mockito </strong></p><ul><li><p>Step 01 : Set up an Eclipse Project with JUnit and Mockito frameworks. First Green Bar.</p></li><li><p>Step 02 : Example to start understanding why we need mocks.</p></li><li><p>Step 03 : What is a stub? Create an unit test using Stub? Disadvantages of Stubs.</p></li><li><p>Step 04 : Your first Mockito code! Hurrah!!! Lets use Mockito to mock TodoService.</p></li><li><p>Step 05 : Stubbing variations with Mockito. A few mockito examples mocking List class : Multiple return values, Argument Matchers and throwing exceptions.</p></li><li><p>Step 06 : Introduction to BDD. Given When Then. BDD Mockito Syntax.</p></li><li><p>Step 07 : How to verify calls on a mock? Verify how many times a method is called. We will add deleteTodo method to the TodoService.</p></li><li><p>Step 08 : How to capture an argument which is passed to a mock?</p></li><li><p>Step 09 : Hamcrest Matchers.</p></li><li><p>Step 10 : Let's simplify things with Mockito Annotations. @Mock, @InjectMocks, @RunWith(MockitoJUnitRunner.class), @Captor</p></li><li><p>Step 11 : JUnit Rules. Using MockitoJUnit.rule() instead of @RunWith(MockitoJUnitRunner.class).</p></li><li><p>Step 12 : Real world Example with Spring</p></li><li><p>Step 13 : What is a spy? How to spy with Mockito?</p></li><li><p>Step 14 : Some Theory : Why does Mockito not allow stubbing final and private methods?</p></li><li><p>Step 15 : Using PowerMock and Mockito to mock a Static Method.</p></li><li><p>Step 16 : Using PowerMock and Mockito to invoke a private Method.</p></li><li><p>Step 17 : Using PowerMock and Mockito to mock a constructor.</p></li><li><p>Step 18 : Good Unit Tests.</p></li></ul><p><br></p><p><strong>JUnit Framework</strong></p><ul><li><p>Step 01 : Need for Unit Testing</p></li><li><p>Step 02 : Setting up your First JUnit</p></li><li><p>Step 03 : First Successful JUnit. Green Bar and assertEquals</p></li><li><p>Step 04 : Refactoring Your First JUnit Test</p></li><li><p>Step 05 : Second JUnit Example assertTrue and assertFalse</p></li><li><p>Step 06 : @Before @After</p></li><li><p>Step 07 : @BeforeClass @AfterClass</p></li><li><p>Step 08 : Comparing Arrays in JUnit Tests</p></li><li><p>Step 09 : Testing Exceptions in JUnit Tests</p></li><li><p>Step 10 : Testing Performance in JUnit Tests</p></li><li><p>Step 11 : Parameterized Tests</p></li><li><p>Step 12 : Organize JUnits into Suites</p></li></ul><p><strong>Start Learning Now.</strong> Hit the Enroll Button!</p><p><br></p>",
        "completion_ratio": 0,
        "last_accessed_time": "2022-03-11T05:53:19Z",
        "enrollment_time": "2021-12-01T09:36:06Z",
        "num_collections": 0
      },
      {
        "_class": "course",
        "id": 2840950,
        "title": "Software Architecture Case Studies",
        "url": "/course/software-architecture-case-studies/learn/",
        "visible_instructors": [
          {
            "_class": "user",
            "id": 29720180,
            "title": "Memi Lavi",
            "name": "Memi",
            "display_name": "Memi Lavi",
            "job_title": "Senior Software Architect & Consultant"
          }
        ],
        "published_title": "software-architecture-case-studies",
        "tracking_id": "qAco0-x9QAealBzv_S3NkQ",
        "description": "<p><strong>Congratulations!&nbsp;You're going to be a Great Software Architect!</strong></p><p>Software Architects have one of the most challenging and rewarding jobs in the industry.</p><p>Great salary, working with management, dealing with the up-to-date technologies and patterns, working with variety of projects and teams - all these make the Software Architect <strong>one of the most desired positions in the software industry.</strong></p><p>Becoming a Software Architect is not easy. but becoming a <strong>Great Software Architect</strong> is even harder.</p><p>One of the best methods to become a great Software Architect is to always learn, and see what other architects did in their own work.</p><p>And this is <strong>exactly what this course is doing</strong>.</p><p>In this course we're going to discuss <strong>4 case studies</strong>, based on a <strong>real-world, production based</strong> systems, that I've worked on in recent years.</p><p>Each case study presents a unique challenge, with a lot of twists in the way, and together - we're going to design the architecture of each and every one of them.</p><p>The case studies are varied, and we'll discuss <strong>classic web app</strong> (but with a very interesting twist...), <strong>file automation system</strong>, and more.</p><p>For each case study, we're going to go through the whole architecture process, and do the following:</p><p>- Map the <strong>components</strong></p><p><strong>- </strong>Understand the <strong>requirements</strong></p><p><strong>- </strong>Define the <strong>application type</strong></p><p>- Select the <strong>technology stack</strong></p><p>- Design the <strong>architecture</strong></p><p>- Add <strong>redundancy</strong></p><p><br></p><p>Our technology stack is also extremely diverse, and we're going to talk about:</p><p>- .NET&nbsp;Core</p><p>- SQL Server</p><p>- Java</p><p>- MongoDB</p><p>- MySQL</p><p>And more...</p><p><br></p><p><strong>Important Note: </strong>This course builds on the foundations laid in <strong>The Complete Guide to Becoming a Software Architect</strong> course, and uses some concepts taught in it (mainly the architecture process). It is highly recommended, though not mandatory, to to take this course before this one.</p><p><br></p><p>But wait, <strong>that's not all!</strong></p><p>One of the most important product of the architect's work are the architecture diagrams. These diagrams are the epitome of the architecture process, and summarize and represent the various aspects of the architecture.</p><p>In this course, we're going to have <strong>3 architecture diagrams</strong> for each case study:</p><p><strong>1. Logic Diagram</strong></p><p><strong>2. Technical Diagram</strong></p><p><strong>3. Physical Diagram</strong></p><p>These diagrams shows the various aspects of the architecture, and are an essential part of the architect's work.</p><p>And the good part?</p><p><strong>You can download these diagrams for your own use</strong>. These diagrams are a great starter for architecture diagrams, and there's a good chance your own system is quite similar to at least one of the case studies in this course. And even if not - you can still use it as a base for your own. Simply put - <strong>it's yours to use.</strong></p><p>This course is <strong>the only course </strong>that gives you access to <strong>real-world, production based</strong> architectures, based on systems designed by real architects, developed by real developers, and have <strong>millions of $&nbsp;invested </strong>in them. Don't miss this opportunity!</p><p><br></p><p>------------------------------------------------------------</p><p><strong>What do my students have to say about my courses?</strong></p><p>------------------------------------------------------------</p><p>\"well done - The course was <strong>very practical</strong>\" - Sam </p><p>\"[The course] <strong>given me the confidence</strong> to go out to the market and advertise myself as such [an Architect]\" - Mathew</p><p>\"Life Changing\" - Arivazhagan</p><p>And lots more...</p><p><br></p><p>------------------------------------------------------------</p><p><strong>Who is this course for?</strong></p><p>------------------------------------------------------------</p><p>Actually, any person who is involved in software development, even system analyst, can profit from this course. </p><p>However, the best candidate for this course is a Software Architect that wants to expand her knowledge, or a developer with some experience, preferably 2 years. This experience will help mainly in understanding the terminology used in this course.</p><p>If you're not sure if this course is for you - drop me a note!</p><p><br></p><p>------------------------------------------------------------</p><p><strong>About Me</strong></p><p>------------------------------------------------------------</p><p>I've been a Software Architect for more than 18 years, working with a variety of clients - Fortune 100 enterprises, start-ups, govt. entities, defense, telco, banking, and lots more.</p><p>I'm an avid speaker and trainer, having trained thousands of students in various courses in the past.</p><p>I love what I&nbsp;do, and my greatest passion (well, besides my family...) is designing modern, practical, and reliable systems for my clients.</p>",
        "completion_ratio": 0,
        "last_accessed_time": "2022-03-11T05:49:06Z",
        "enrollment_time": "2021-11-18T19:28:57Z",
        "num_collections": 0
      },
      {
        "_class": "course",
        "id": 3740004,
        "title": "Lambdas in Java - From Zero to Hero",
        "url": "/course/lambdas-streams-in-java-zero-to-hero/learn/",
        "visible_instructors": [
          {
            "_class": "user",
            "id": 246196,
            "title": "Ajay Iyengar",
            "name": "Ajay",
            "display_name": "Ajay Iyengar",
            "job_title": "Developer |Passionate teacher |Architect | Blogger"
          }
        ],
        "published_title": "lambdas-streams-in-java-zero-to-hero",
        "tracking_id": "PxqwTrM0RqGNpVOkZKLeLQ",
        "description": "<p>Join the most <strong>comprehensive </strong>course that covers <strong>Lambdas and Streams introduced in Java 8.</strong></p><p>There are lots of <strong>exercises </strong>(along with the solution) <strong> </strong>at the end of a section that will help you <strong>gain confidence.</strong></p><p>Using numerous<strong> real-life examples</strong>, you will <strong>learn</strong>:</p><ul><li><p>What the Strategy pattern is</p></li><li><p>What kinds of problems do Anonymous classes solve?</p></li><li><p>Why do we need Lambda expressions?</p></li><li><p>How can Lambda expressions help us in writing concise code?</p></li><li><p>What are higher-order functions?</p></li><li><p><strong>Deep dive </strong>into <strong>how </strong>Lambda expressions are implemented behind the scenes and - </p><ol><li><p>Understand how to look at<strong> byte code</strong> using <strong>javap</strong></p></li><li><p>Understand the role of the <strong>invokedynamic</strong> byte code instruction</p></li><li><p>What are <strong>Method Handles</strong></p></li></ol></li><li><p>Commonly used functional interfaces like Predicate, Function, Supplier, Consumer, BiConsumer&nbsp; -</p><ol><li><p>How and where to apply them?</p></li><li><p>How are they used internally in the JDK library?</p></li></ol></li><li><p>Function composition</p></li><li><p>Method references</p></li><li><p>Explore the Comparator interface</p></li><li><p>Numerous methods in the Stream API like - filter, map, collect, sorted, distinct</p></li><li><p>Understanding what a stream is</p></li><li><p>Understanding the important characteristics of a stream</p></li><li><p><strong>Optional API</strong> and the right way to use them</p></li><li><p>Short-circuiting operations in the Stream pipeline</p></li><li><p>Understand why we need <strong>Primitive Streams</strong></p></li><li><p><strong>Reduction </strong>operations in the Stream pipeline and the importance of identity in Reduction</p></li><li><p>Explore the <strong>Collectors </strong>API</p></li><li><p>Explore <strong>flatMap </strong>and other sources of creating Streams</p></li><li><p>Explore <strong>Parallel Streams</strong> -</p><p> 1. What is Moore's law?</p><p> 2. Why do we need Parallel streams?</p><p> 3. When should we use Parallel streams?</p><p> 4. What is the infrastructure behind the scenes when we use Parallel streams?</p><p> 5. How does Reduction work in parallel streams?</p><p> 6. Role of the Spliterator</p></li><li><p>Learn how to <strong>debug </strong>and <strong>visualize </strong>Java 8 Streams with Eclipse &amp; Intellij</p></li></ul><p>and more!</p><p>Students completing the course will have a solid, in-depth knowledge of writing concise code using many features that have truly revolutionized how we write code in Java.</p><p><strong>What if you have questions?</strong></p><p>I offer <strong>full support, 7 days a week</strong>, answering any questions you have.</p><p><br></p><p><strong>What version of Java should you use?</strong></p><p>I am using Java 14 for all the demos since that is the latest version when recording this course. I would urge you to use the latest version of Java. However, the focus will be on Lambdas, Streams, and lots of other features introduced in Java 8 as mentioned above.</p>",
        "completion_ratio": 15,
        "last_accessed_time": "2022-03-11T05:19:45Z",
        "enrollment_time": "2022-01-01T03:46:57Z",
        "num_collections": 0
      },
      {
        "_class": "course",
        "id": 622414,
        "title": "Taming Big Data with Apache Spark and Python - Hands On!",
        "url": "/course/taming-big-data-with-apache-spark-hands-on/learn/",
        "visible_instructors": [
          {
            "_class": "user",
            "id": 13148312,
            "title": "Sundog Education by Frank Kane",
            "name": "Sundog Education",
            "display_name": "Sundog Education by Frank Kane",
            "job_title": "Founder, Sundog Education. Machine Learning Pro"
          },
          {
            "_class": "user",
            "id": 32164746,
            "title": "Frank Kane",
            "name": "Frank",
            "display_name": "Frank Kane",
            "job_title": "Founder, Sundog Education"
          },
          {
            "_class": "user",
            "id": 168079506,
            "title": "Sundog Education Team",
            "name": "Sundog Education",
            "display_name": "Sundog Education Team",
            "job_title": "Sundog Education Team"
          }
        ],
        "published_title": "taming-big-data-with-apache-spark-hands-on",
        "tracking_id": "7B8-9pt_QLmANN4Dlb2L0g",
        "description": "<p><strong>New!&nbsp;</strong><em>Updated for&nbsp;Spark 3, more hands-on exercises, and a stronger focus on DataFrames and Structured Streaming.</em></p><p>“Big data\" analysis is a hot and highly valuable skill – and this course will teach you the hottest technology in big data: <strong>Apache Spark </strong>and specifically<strong> PySpark</strong>. Employers including <strong>Amazon</strong>, <strong>EBay</strong>, <strong>NASA JPL</strong>, and <strong>Yahoo</strong> all use Spark to quickly extract meaning from massive data sets across a fault-tolerant <strong>Hadoop</strong> cluster. You'll learn those same techniques, using your own Windows system right at home. It's easier than you might think.</p><p>Learn and master the art of framing data analysis problems as Spark problems through over 20 hands-on examples, and then scale them up to run on cloud computing services in this course. <strong>You'll be learning from an ex-engineer and senior manager from&nbsp;Amazon and IMDb.</strong></p><p><br></p><ul><li><p>Learn the concepts of Spark's DataFrames and Resilient Distributed Datastores</p></li><li><p>Develop and run Spark jobs quickly using Python and pyspark</p></li><li><p>Translate complex analysis problems into iterative or multi-stage Spark scripts</p></li><li><p>Scale up to larger data sets using Amazon's <strong>Elastic MapReduce</strong> service</p></li><li><p>Understand how<strong> Hadoop YARN</strong> distributes Spark across computing clusters</p></li><li><p>Learn about other Spark technologies, like Spark SQL, Spark Streaming, and GraphX</p></li></ul><p>By the end of this course, you'll be running code that analyzes gigabytes worth of information – in the cloud – in a matter of minutes.&nbsp;</p><p><strong>This course uses the familiar Python programming language</strong>; if you'd rather use Scala to get the best performance out of Spark, see my \"Apache&nbsp;Spark with&nbsp;Scala - Hands On with&nbsp;Big&nbsp;Data\" course instead.<br></p><p>We'll have some fun along the way. You'll get warmed up with some simple examples of using Spark to analyze movie ratings data and text in a book. Once you've got the basics under your belt, we'll move to some more complex and interesting tasks. We'll use a million movie ratings to find movies that are similar to each other, and you might even discover some new movies you might like in the process! We'll analyze a social graph of superheroes, and learn who the most “popular\" superhero is – and develop a system to find “degrees of separation\" between superheroes. Are all Marvel superheroes within a few degrees of being connected to The Incredible Hulk? You'll find the answer.</p><p>This course is very hands-on; you'll spend most of your time following along with the instructor as we write, analyze, and run real code together – both on your own system, and in the cloud using Amazon's Elastic MapReduce service. <strong>7 hours of video</strong> content is included, with <strong>over 20 real examples</strong> of increasing complexity you can build, run and study yourself. Move through them at your own pace, on your own schedule. The course wraps up with an overview of other Spark-based technologies, including Spark SQL, Spark Streaming, and GraphX.</p><p>Wrangling big data with Apache&nbsp;Spark is an important skill in today's technical world. Enroll now!</p><p><br></p><ul><li><p><strong><em>\" I studied \"Taming Big Data with Apache Spark and Python\" with Frank Kane, and helped me build a great platform for Big Data as a Service for my company. I recommend the course!&nbsp; \" - Cleuton Sampaio De Melo Jr.</em></strong></p></li></ul>",
        "completion_ratio": 0,
        "last_accessed_time": "2022-03-11T05:19:08Z",
        "enrollment_time": "2021-11-18T19:28:58Z",
        "num_collections": 0
      },
      {
        "_class": "course",
        "id": 2017320,
        "title": "Redis Bootcamp for Beginners: Get Hands On with Redis.",
        "url": "/course/redis-bootcamp-for-beginners/learn/",
        "visible_instructors": [
          {
            "_class": "user",
            "id": 27737912,
            "title": "Diwakar Singh",
            "name": "Diwakar",
            "display_name": "Diwakar Singh",
            "job_title": "Go, Rust, Redis, Java, C, C++"
          }
        ],
        "published_title": "redis-bootcamp-for-beginners",
        "tracking_id": "tyg1Sfk5SuauAsyVKSJJCw",
        "description": "<p>Have you heard that database skills are essential for developers to be skilled in and understand?</p><p>Are you wanting to learn NoSQL database which runs blazingly fast?</p><p>Maybe you want to learn Redis from Scratch but have not found a good place to learn.</p><p>Or perhaps you are a developer who wants to improve your career options by having skills in Redis and NoSql, one of the worlds most popular database.<br></p><p>Whatever the reason you have arrived here, this course will...</p><p><strong>Help you understand and apply Redis, including its various commands and options.</strong></p><p><strong>Having database skills is absolutely vital for developers to avoid getting left behind and to maximize job and consulting opportunities.</strong></p><p><strong>Key concepts you will learn and work with in this course.</strong></p><p><strong>NOSql Database(very much an in-demand technology).<br>Redis (one of the worlds most loved database).<br>Datatypes<br>Transactions</strong></p><p><br></p><p>Working with Keys <br>Using Publish/Subscribe <br>Hyperloglog<br>Sorted Sets<br>Keys<br>Sets<br>String<br>Geo.</p><p>In addition there are installation videos covering Redis on Windows, Mac or Linux.</p><p>Not only does the course teach you Redis, but there are multiple exercises for you to try with video solutions to further help you understand the material.</p><p><strong>Why enrolling in this course is the best decision you can make.</strong></p><p>Become skilled as a database developer generally needs you to learn NoSQL.  Often this will require multiple courses.  However you learn all those topics, and data analysis in this one course.</p><p>Essentially, you are learning from someone who has all the professional training, skills, and experience needed to  teach you how to become proficient with Redis as quickly as possible.<br></p><p>If you are ready to get that first paid programming job, or to move up to a more senior programming position, then this course is for you!</p><p><strong>After completing this course, you will have the necessary skills to be able to use Redis confidently, have a solid understanding of Redis and be skilled in key value pair database.</strong></p><p>The sooner you sign up for this course, the sooner you will have the skills and knowledge you need to increase your job or consulting opportunities.  <br><br>Redis skills are in high demand, as is NoSql database, and you will understand and be able to use both after going through this course.<br></p><p>Your new job or consulting opportunity awaits!  </p><p>Why not get started today?</p><p>Click the <strong>Signup</strong> button to sign up for the course!</p>",
        "completion_ratio": 2,
        "last_accessed_time": "2022-03-11T05:16:27Z",
        "enrollment_time": "2021-10-24T13:04:32Z",
        "num_collections": 0
      },
      {
        "_class": "course",
        "id": 3385384,
        "title": "Low Level System Design [An interview perspective]",
        "url": "/course/low-level-system-design-an-interview-perspective/learn/",
        "visible_instructors": [
          {
            "_class": "user",
            "id": 128346124,
            "title": "Abhishek Ghosh",
            "name": "Abhishek",
            "display_name": "Abhishek Ghosh",
            "job_title": "Software Engineer, Programmer and Design enthusiast"
          }
        ],
        "published_title": "low-level-system-design-an-interview-perspective",
        "tracking_id": "CeSEAyquRb-kT0gfqF5xcA",
        "description": "<p>Software Engineering interviews focus on the coding and software designing skills in an interview. These are fondly known as Algorithm and Design rounds respectively. The Algorithms round check the raw coding skills of a candidate, by the application of Data Structures and Algorithms mostly practiced in school, while the Design round tests the System design skills, which can be High Level Design [HLD] or Low Level Design [LLD].</p><p>Low Level Design is also known as Object Oriented Design [OOD] or Object Oriented Analysis and Design [OOAD]. From interns to Senior Software Engineers, top companies dedicate at least one round in the entire interview process for system design. For <strong>candidates having less than 3 years' of experience</strong>, Low Level Design plays the most crucial role because these candidates are inexperienced, hence not supposed to have knowledge of High Level Design. Candidates having experience of more than 3 years usually face the system&nbsp;design interviews with a mix of both HLD and LLD.</p><p>This course Low Level System Design<strong> </strong>focuses on the low level aspects of the design. The only way to get better at interviews is by practicing lots of similar problems. In this course, based upon my research, a list of <strong>most frequently asked questions in interviews</strong> is compiled. Not only is this useful for the interviews, but also for general problem solving and application design.</p><p>Every problem is broken down and discussed in a comprehensive manner:</p><ol><li><p>Making the problem statement clear of any ambiguity. Terminologies related to the problem are explained and expectations well laid out.</p></li><li><p><strong>Class Diagram</strong> construction serves as a road map for coding the problem</p></li><li><p>The coding is done in the most elegant manner such that the users learn to approach the problem top-down. This is important because even if the class diagram is in place, it's imperative to know the sequence of class construction in program, for a smooth experience.</p></li><li><p>Wherever applicable, the code is optimized further. Trade offs related to <strong>optimization </strong>are also discussed.</p></li><li><p>At last, test case construction is shown to make the candidate wary about <strong>writing good test cases</strong>, and their impact on the application.</p></li></ol><p>All this is done while following industry best practices. Proper <strong>time utilization during the interview</strong> is also talked about intermittently, and ways to deal with a situation when the candidate is stuck at a problem for a long time. The coding is done in C++ but the code is <strong>language agnostic </strong>to a great extent.</p><p>The course also sports Closed Captions [<strong>English Subtitles</strong>] for all the videos. They are hand-crafted, not auto-generated. This feature is helpful when the student is having problem with the accent, there's a lot of background noise present, or when you want to make detailed notes from the explanation.</p><p>After taking this course, you</p><ol><li><p>Will be in a better place to face LLD interviews.</p></li><li><p>Can participate in design discussions related to such problems</p></li><li><p>Write better code than before</p></li><li><p>Have a proper theater to break the problem into pieces and deal with them independently</p></li></ol><p><strong>Guaranteed Takeaway</strong></p><ul><li><p>If you understand all the problems presented in this course, there won't be any fear of solving LLD questions. You'll be asking the right questions about the problem, and will be confident to jab at any design.</p></li></ul>",
        "completion_ratio": 6,
        "last_accessed_time": "2022-03-11T05:02:48Z",
        "enrollment_time": "2021-10-24T13:04:32Z",
        "num_collections": 1
      },
      {
        "_class": "course",
        "id": 3597496,
        "title": "More than Certified in Terraform",
        "url": "/course/terraform-certified/learn/",
        "visible_instructors": [
          {
            "_class": "user",
            "id": 1967130,
            "title": "Derek Morgan",
            "name": "Derek",
            "display_name": "Derek Morgan",
            "job_title": "IoT and Cloud Engineer"
          }
        ],
        "published_title": "terraform-certified",
        "tracking_id": "5nEgaWn0TtGpw-AMBOX5Mw",
        "description": "<p>This course will teach you what you need to know to deploy Terraform resources properly and efficiently whether you're a beginner or someone looking for some new tricks!&nbsp;We will start with the very basics and methodically build from there, learning new information, tricks, and skills along the way!&nbsp;Most lessons are less than 8 minutes long to help ensure a pace that doesn't put you to sleep!&nbsp;</p><p>With a focus on using built-in tools to deploy and troubleshoot your deployments, you'll be the only one not having to Google every error you find or copy and paste from Stack Overflow!&nbsp;</p><p>You'll learn important Terraform tools to troubleshoot and build your infrastructure as you roll out a Node-RED IoT&nbsp;application using <strong>Docker</strong>, a Rancher K3s <strong>Kubernetes</strong> deployment on <strong>AWS</strong>, a Kubernetes deployment of pods, and even a full <strong>CICD</strong> deployment using <strong>Terraform Cloud</strong>! </p><p>We'll focus on writing efficient code with minimal repetition while utilizing many of Terraform's advanced features such as:</p><ul><li><p>Import&nbsp; &nbsp; &nbsp; &nbsp;</p></li><li><p>Join</p></li><li><p>Min</p></li><li><p>Max</p></li><li><p>Local Resource</p></li><li><p>Variables</p></li><li><p>Splat</p></li><li><p> For Loops</p></li><li><p>Dynamic Blocks</p></li><li><p>Variable Validation</p></li><li><p>Path References</p></li><li><p> String Interpolation</p></li><li><p>Workspaces</p></li><li><p>Local and Remote Provisioners</p></li><li><p>and more!&nbsp;</p><p><br></p></li></ul><p>The entire course was recorded using quality equipment for ease of listening, intelligent zooming and cursor highlighting to ensure maximum readability and the ability to follow along easily, and annotations where necessary to quickly see web links to visit, important topics, and follow along with the resources more easily.</p><p>All of the code is tested using the 0.14+ version of Terraform and new updates will always be tested and rolled out as soon as possible!&nbsp;</p><p><br></p><p><strong>So what are you waiting for?&nbsp;Sign up today and Terraform Apply Yourself!</strong></p><p><br></p>",
        "completion_ratio": 5,
        "last_accessed_time": "2022-03-11T04:59:07Z",
        "enrollment_time": "2021-10-14T17:24:16Z",
        "num_collections": 0
      },
      {
        "_class": "course",
        "id": 4102762,
        "title": "Design Microservices Architecture with Patterns & Principles",
        "url": "/course/design-microservices-architecture-with-patterns-principles/learn/",
        "visible_instructors": [
          {
            "_class": "user",
            "id": 31024906,
            "title": "Mehmet Ozkaya",
            "name": "Mehmet",
            "display_name": "Mehmet Ozkaya",
            "job_title": "Software/Solutions Architect"
          }
        ],
        "published_title": "design-microservices-architecture-with-patterns-principles",
        "tracking_id": "rNBuLx0uQequjZ2g1mlBIw",
        "description": "<p>In this course, we're going to learn <strong>how to Design Microservices Architecture with using Design Patterns</strong>, <strong>Principles </strong>and the <strong>Best Practices</strong>. We will using the right architecture Design Patterns and techniques.</p><p>By the end of the course, you will Learn how to <strong>handle millions of request</strong> with designing system for <strong>high availability, high scalability</strong>, <strong>low latency</strong>, and <strong>resilience </strong>to network failures on microservices distributed architectures.</p><p>This course is will be the <strong>journey of software architecture design</strong> with step by step evolving architecture from monolithic to event driven microservices.</p><p>We will start the basics of software architecture with designing e-commerce monolithic architecture that handles low amount of requests.</p><p>After that step by step <strong>evolves </strong>the architecture with;</p><ul><li><p>\t\t<strong>Layered Architecture</strong></p></li><li><p><strong>\t\tSOA</strong></p></li><li><p><strong>\t\tMicroservices</strong></p></li><li><p>\t\tand lastly <strong>Event Driven Microservices Architectures </strong>with designing together that handle millions of requests.</p></li></ul><p>We will discuss microservices architectures with all aspects, </p><ul><li><p>\tMicroservices <strong>Decomposition</strong></p></li><li><p>\tMicroservices <strong>Communications </strong>(Sync / Async Message-Based Communication, API Gws)</p></li><li><p>\tMicroservices<strong> Data Management</strong> (Databases / Query / Commands / Distributed Transactions)</p></li><li><p>\tMicroservices <strong>Distributed Caching</strong></p></li><li><p>\tMicroservices <strong>Deployments </strong>with <strong>Containers </strong>and <strong>Orchestrators</strong></p></li></ul><p>with applying microservices design patterns and practices.</p><p>We are going to design with together and <strong>step by step with our drawing tool</strong> that we will use this designing architectures.</p><p>We will start with designing <strong>Monolithic Architecture</strong>. And you can see that we have <strong>Functional </strong>and <strong>Non-functional requirements </strong>that should cover our design and we have <strong>patterns and principles toolbox </strong>that we will learn and use these principles when evolving architectures.</p><p>You will find that we will add new requirements in order to <strong>handle millions of request </strong>and <strong>learn new patterns </strong>and <strong>practices </strong>that will use these principles when <strong>evolving architectures</strong>.</p><ul><li><p>\t<strong>Layered Architecture</strong></p></li><li><p>\t<strong>SOA</strong></p></li><li><p>\t<strong>Microservices Architectures</strong></p></li><li><p>\tMicroservices Architectures<strong> API Gws</strong></p></li><li><p>\tMicroservices Architectures <strong>API Gws - BFF\t</strong>\t</p></li><li><p>\tMicroservices Architecture - <strong>Service Aggregator / Registry Patterns</strong></p></li><li><p>\tMicroservices Architecture - <strong>Message Broker</strong></p></li><li><p>\tMicroservices Architecture - <strong>Database Sharding Cassandra</strong></p></li><li><p>\t<strong>Event-Driven Microservices Architecture</strong></p></li><li><p>\tMicroservices <strong>Distributed Caching </strong></p></li><li><p>\tMicroservices <strong>Containers </strong>and <strong>Orchestrators</strong></p></li></ul><p>We will see full of patterns and principle toolbox is loading with new patterns and apply them into current designs. We will see<strong> latest patterns that we use more than 30 patterns</strong> and practices with implementing<strong> high scalability, high availability </strong>and handle millions of request requirements.</p><p>Let me write some microservices pattern which we covered in this course;</p><ul><li><p>\tThe <strong>Database-per-Service Pattern</strong></p></li><li><p><strong>\tAPI Gateway </strong>Pattern</p></li><li><p><strong>\tBackends for Frontends</strong> pattern BFF</p></li><li><p>\t<strong>Service Aggregator</strong> Pattern, <strong>Service Registry </strong>Pattern</p></li><li><p>\t<strong>CQRS </strong>and <strong>Event Sourcing </strong>Patterns</p></li><li><p>\t<strong>Materialized View</strong> Pattern</p></li><li><p>\t<strong>Publish–Subscribe</strong> Pattern</p></li><li><p>\t<strong>Database Sharding</strong> Pattern</p></li><li><p>\t<strong>Saga </strong>Pattern</p></li><li><p>\t<strong>Outbox </strong>Pattern and so on..</p></li></ul><p>So the course flow will be the both <strong>theoretical </strong>and <strong>practical </strong>information;</p><ul><li><p>\tWe will learn a specific pattern, <strong>why </strong>and <strong>where </strong>we should <strong>use</strong></p></li><li><p>\tAfter that we will see the <strong>Reference architectures</strong> that applied these patterns</p></li><li><p>\tAfter that we will design our architecture with applying this newly learned pattern with together</p></li><li><p>\tAnd lastly we will decide which <strong>Technologies </strong>can be choices for that architectures.\t</p></li></ul><p>And at the last section, we will made <strong>Code Review for Existing Microservices Architecture Repository </strong>on GitHub for practical implementation of microservices architecture.</p><p>So this course will includes </p><ul><li><p>\t<strong>Hands-on Design Activities</strong></p></li><li><p>\t<strong>Iterate </strong>Design Architecture from On-Premises to Cloud Server-less architectures</p></li><li><p>\t<strong>Evolves </strong>architecture monolithic to <strong>Event-Driven Microservices Architectures</strong></p></li><li><p>\t<strong>Refactoring </strong>System Design for handling million of requests</p></li><li><p>\tApply best practices with microservices design patterns and principles</p></li><li><p>\tExamine microservices patterns with all aspects like <strong>Communications</strong>, <strong>Data Management, Caching</strong> and <strong>Deployments</strong></p></li><li><p>\tPrepare for <strong>Software Architecture Interviews</strong></p></li><li><p>\tPrepare for <strong>System Design Architecture Interview exams</strong>.\t</p></li></ul><p>I have been joined several famous company's architecture position interviews, also involved software architect positions assessment process more than <strong>50+ interviews</strong> <strong>collect the architecture requirements </strong>for software industry positions.</p><p>So with this course, you will gain <strong>real-world experience </strong>about all architecture positions from monolithic to event-driven microservices architectures.</p><p>This course prepared for the beginner but at least you should familiar with basics of software architectures. This course will have good theoretical information but also will be <strong>90% of hands-on design activities</strong>. All course architecture steps will designed step by step and together.</p><p>I hope you'll join me on this journey and develop this project with me.</p>",
        "completion_ratio": 0,
        "last_accessed_time": "2022-03-11T04:57:31Z",
        "enrollment_time": "2022-03-07T18:18:03Z",
        "num_collections": 0
      }
    ]
  }